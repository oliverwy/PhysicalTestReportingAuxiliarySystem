# Generated by Django 2.2.6 on 2019-10-26 10:44

import computed_property.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BMITestNormals',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('classtype', models.CharField(default=0, max_length=10, verbose_name='等级')),
                ('ItemScore', models.IntegerField(default=0, verbose_name='单项分值')),
                ('male', models.FloatField(default='0.0', verbose_name='BMI男范围')),
                ('female', models.FloatField(default='0.0', verbose_name='BMI女范围')),
            ],
            options={
                'verbose_name': '体重指数（BMI）单项评分表',
                'verbose_name_plural': '体重指数（BMI）单项评分表',
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('class_name', models.CharField(max_length=100, verbose_name='专业班级')),
            ],
            options={
                'verbose_name': '专业班级表',
                'verbose_name_plural': '专业班级表',
            },
        ),
        migrations.CreateModel(
            name='FiftymeterTestNormal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('classtype', models.CharField(default=0, max_length=10, verbose_name='等级')),
                ('ItemScore', models.IntegerField(default=0, verbose_name='单项分值')),
                ('malefirst', models.FloatField(default=0, verbose_name='大一大二指标男')),
                ('maleSecond', models.FloatField(default=0, verbose_name='大三大四指标男')),
                ('femalefirst', models.FloatField(default=0, verbose_name='大一大二指标女')),
                ('femaleSecond', models.FloatField(default=0, verbose_name='大三大四指标女')),
            ],
            options={
                'verbose_name': '50米跑单项评分表（单位：秒）',
                'verbose_name_plural': '50米跑单项评分表（单位：秒）',
            },
        ),
        migrations.CreateModel(
            name='ItemWeight',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('BMI', models.FloatField(default=0, verbose_name='体重指数BMI')),
                ('lungcapacity', models.FloatField(default=0, verbose_name='肺活量')),
                ('fiftymeter', models.FloatField(default=0, verbose_name='50米跑')),
                ('sitandreach', models.FloatField(default=0, verbose_name='坐位体前屈')),
                ('standingbroadjump', models.FloatField(default=0, verbose_name='立定跳远')),
                ('pull_ups', models.FloatField(default=0, verbose_name='引体向上')),
                ('Oneminutesitups', models.FloatField(default=0, verbose_name='一分钟仰卧起坐')),
                ('middle_distancerun', models.FloatField(default=0, verbose_name='中长跑')),
            ],
            options={
                'verbose_name': '单项指标与权重',
                'verbose_name_plural': '单项指标与权重',
            },
        ),
        migrations.CreateModel(
            name='LungCapacityTestNormal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('classtype', models.CharField(default=0, max_length=10, verbose_name='等级')),
                ('ItemScore', models.IntegerField(default=0, verbose_name='单项分值')),
                ('malefirst', models.IntegerField(default=0, verbose_name='大一大二指标男')),
                ('maleSecond', models.IntegerField(default=0, verbose_name='大三大四指标男')),
                ('femalefirst', models.IntegerField(default=0, verbose_name='大一大二指标女')),
                ('femaleSecond', models.IntegerField(default=0, verbose_name='大三大四指标女')),
            ],
            options={
                'verbose_name': '肺活量单项评分表（单位：毫升）',
                'verbose_name_plural': '肺活量单项评分表（单位：毫升）',
            },
        ),
        migrations.CreateModel(
            name='MiddleDistanceRunPlusTestNormal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('ItemScore', models.IntegerField(default=0, verbose_name='单项加分值')),
                ('malefirst', models.CharField(default=0, max_length=10, verbose_name='大一大二指标男')),
                ('maleSecond', models.CharField(default=0, max_length=10, verbose_name='大三大四指标男')),
                ('femalefirst', models.CharField(default=0, max_length=10, verbose_name='大一大二指标女')),
                ('femaleSecond', models.CharField(default=0, max_length=10, verbose_name='大三大四指标女')),
            ],
            options={
                'verbose_name': '男生1000米跑、女生800米加分表（单位：分·秒）',
                'verbose_name_plural': '男生1000米跑、女生800米加分表（单位：分·秒）',
            },
        ),
        migrations.CreateModel(
            name='MiddleDistanceRunTestNormal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('classtype', models.CharField(default=0, max_length=10, verbose_name='等级')),
                ('ItemScore', models.IntegerField(default=0, verbose_name='单项分值')),
                ('malefirst', models.FloatField(default=0, verbose_name='大一大二指标男')),
                ('maleSecond', models.FloatField(default=0, verbose_name='大三大四指标男')),
                ('femalefirst', models.FloatField(default=0, verbose_name='大一大二指标女')),
                ('femaleSecond', models.FloatField(default=0, verbose_name='大三大四指标女')),
            ],
            options={
                'verbose_name': '男生1000米、女生800米耐力跑单项评分表（单位：分·秒）',
                'verbose_name_plural': '男生1000米、女生800米耐力跑单项评分表（单位：分·秒）',
            },
        ),
        migrations.CreateModel(
            name='OneMinuteSitupsAndPullUpPlusNormal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('ItemScore', models.IntegerField(default=0, verbose_name='单项加分值')),
                ('malefirst', models.IntegerField(default=0, verbose_name='大一大二指标男')),
                ('maleSecond', models.IntegerField(default=0, verbose_name='大三大四指标男')),
                ('femalefirst', models.IntegerField(default=0, verbose_name='大一大二指标女')),
                ('femaleSecond', models.IntegerField(default=0, verbose_name='大三大四指标女')),
            ],
            options={
                'verbose_name': '男生引体向上、女生仰卧起坐加分表（单位：次）',
                'verbose_name_plural': '男生引体向上、女生仰卧起坐加分表（单位：次）',
            },
        ),
        migrations.CreateModel(
            name='OneMinuteSitupsAndPullUpTestNormal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('classtype', models.CharField(default=0, max_length=10, verbose_name='等级')),
                ('ItemScore', models.IntegerField(default=0, verbose_name='单项分值')),
                ('malefirst', models.IntegerField(default=0, verbose_name='大一大二指标男')),
                ('maleSecond', models.IntegerField(default=0, verbose_name='大三大四指标男')),
                ('femalefirst', models.IntegerField(default=0, verbose_name='大一大二指标女')),
                ('femaleSecond', models.IntegerField(default=0, verbose_name='大三大四指标女')),
            ],
            options={
                'verbose_name': '男生引体向上、女生一分钟仰卧起坐评分表（单位：次）',
                'verbose_name_plural': '男生引体向上、女生一分钟仰卧起坐评分表（单位：次）',
            },
        ),
        migrations.CreateModel(
            name='SitandReachTestNoraml',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('classtype', models.CharField(default=0, max_length=10, verbose_name='等级')),
                ('ItemScore', models.IntegerField(default=0, verbose_name='单项分值')),
                ('malefirst', models.FloatField(default=0, verbose_name='大一大二指标男')),
                ('maleSecond', models.FloatField(default=0, verbose_name='大三大四指标男')),
                ('femalefirst', models.FloatField(default=0, verbose_name='大一大二指标女')),
                ('femaleSecond', models.FloatField(default=0, verbose_name='大三大四指标女')),
            ],
            options={
                'verbose_name': '坐位体前屈单项评分表（单位：厘米）',
                'verbose_name_plural': '坐位体前屈单项评分表（单位：厘米）',
            },
        ),
        migrations.CreateModel(
            name='StandingBroadJumpTestNormal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('classtype', models.CharField(default=0, max_length=10, verbose_name='等级')),
                ('ItemScore', models.IntegerField(default=0, verbose_name='单项分值')),
                ('malefirst', models.FloatField(default=0, verbose_name='大一大二指标男')),
                ('maleSecond', models.FloatField(default=0, verbose_name='大三大四指标男')),
                ('femalefirst', models.FloatField(default=0, verbose_name='大一大二指标女')),
                ('femaleSecond', models.FloatField(default=0, verbose_name='大三大四指标女')),
            ],
            options={
                'verbose_name': '立定跳远单项评分表（单位：厘米）',
                'verbose_name_plural': '立定跳远单项评分表（单位：厘米）',
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('gradeclass', models.CharField(max_length=20, verbose_name='年级')),
                ('classname', models.CharField(max_length=50, verbose_name='专业班级')),
                ('address', models.CharField(blank=True, max_length=250, verbose_name='家庭住址')),
                ('studentid', models.CharField(max_length=18, verbose_name='学号')),
                ('nationality', models.CharField(blank=True, max_length=50, verbose_name='民族')),
                ('name', models.CharField(max_length=50, verbose_name='学生姓名')),
                ('gender', models.CharField(choices=[('男', '男'), ('女', '女')], max_length=10, verbose_name='性别')),
                ('bithday', computed_property.fields.ComputedCharField(compute_from='computer_bithday', editable=False, max_length=30, null=True, verbose_name='出生日期')),
                ('idcardno', models.CharField(max_length=20, verbose_name='身份证号')),
                ('stature', models.FloatField(default=0, verbose_name='身高')),
                ('weight', models.FloatField(default=0, verbose_name='体重')),
                ('lungcapacity', models.IntegerField(default=0, verbose_name='肺活量')),
                ('middle_distancerun', models.FloatField(default=0, verbose_name='中长跑')),
                ('fiftymeter', models.FloatField(default=0, verbose_name='50米')),
                ('standingbroadjump', models.FloatField(default=0, verbose_name='立定跳远')),
                ('pull_ups', models.IntegerField(default=0, verbose_name='引体向上')),
                ('sitandreach', models.FloatField(default=0, verbose_name='坐位体前屈')),
                ('Oneminutesitups', models.IntegerField(default=0, verbose_name='一分钟仰卧起坐')),
                ('score', computed_property.fields.ComputedFloatField(compute_from='caculate_it', editable=False, verbose_name='分数')),
                ('enrollment', models.CharField(blank=True, max_length=50, null=True, verbose_name='入学时间')),
                ('remarks', models.TextField(blank=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '体能测试成绩表',
                'verbose_name_plural': '体能测试成绩表',
            },
        ),
        migrations.CreateModel(
            name='TecherInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('techerName', models.CharField(max_length=20, verbose_name='教师姓名')),
                ('techerGender', models.CharField(choices=[('男', '男'), ('女', '女')], max_length=10, verbose_name='性别')),
                ('mobileNo', models.CharField(max_length=20, verbose_name='手机号码')),
                ('officeNo', models.CharField(blank=True, max_length=20, verbose_name='座机号码')),
                ('office', models.CharField(blank=True, max_length=50, verbose_name='办公室')),
            ],
            options={
                'verbose_name': '教师信息表',
                'verbose_name_plural': '教师信息表',
            },
        ),
        migrations.CreateModel(
            name='TestDatetime',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('testTime', models.CharField(max_length=100, verbose_name='测试时间')),
            ],
            options={
                'verbose_name': '测试时间',
                'verbose_name_plural': '测试时间',
            },
        ),
        migrations.CreateModel(
            name='TestSite',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('siteName', models.CharField(max_length=100, verbose_name='测试场地')),
            ],
            options={
                'verbose_name': '测试场地',
                'verbose_name_plural': '测试场地',
            },
        ),
        migrations.CreateModel(
            name='TestSchedule',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('testClass', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Class', verbose_name='测试时间')),
                ('testdatetime', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.TestDatetime', verbose_name='测试时间')),
                ('testsite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.TestSite', verbose_name='测试场地')),
                ('testtecher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.TecherInfo', verbose_name='测试教师')),
            ],
            options={
                'verbose_name': '测试时间场地安排表',
                'verbose_name_plural': '测试时间场地安排表',
            },
        ),
    ]
